<project name='jam' default='all' basedir='.'>

  <property name='build.compiler' value='javac1.4'/>
  <property name='product.version' value='1.0.0'/>

  <property name='build_dir'   value='../build/jam'/>

  <property name='src_dir'     value='src'/>
  <property name="site_dir"    value='website'/>

  <property name='jam_jar'      value='${build_dir}/jam.jar'/>
  <property name='javadoc_zip'  value='${build_dir}/jamapi.zip'/>
  <property name="jamsrc_zip"   value='${build_dir}/jamsrc.zip'/>
  <property name="sitebuild_dir"    value='${build_dir}/website'/>
  <property name='javadocbuild_dir'    value='${sitebuild_dir}/javadocs'/>
  <property name='gen_dir'     value='${build_dir}/generatedsrc'/>
  <property name='classes_dir' value='${build_dir}/classes'/>
  <property name='antlr_jar'   value='external/lib/antlr.jar'/>

  <property name="java15_src"   value='org/apache/xmlbeans/impl/jam/internal/java15'/>
  <property name="java15_jar"   value='${src_dir}/${java15_src}/java15jam.jar'/>
  <property name='java15_builddir'  value='${build_dir}/java15'/>

  <!--FIXME need to do get the jar ourselves -->
  <property name='staxapi_jar'   value='../build/lib/jsr173_api.jar'/>

  <property name='tests_dir'   value='test'/>

  <target name='clean'>
    <delete dir='${build_dir}'/>

    <!-- delete the old location just in case someone still has it around -->
    <delete dir='build'/>  
  </target>

  <target name='cleanall' depends='clean,all'/>

  <target name='all' depends='compile'/>

  <target name='parser'>
    <delete dir='${gen_dir}'/>
    <mkdir dir='${gen_dir}'/>
    <!-- skipping parser generation for now, just noise at this point
    <antlr outputdirectory='${gen_dir}' target='${src_dir}/java.g'
           debug='false'>
       <classpath>
         <pathelement location='${antlr_jar}'/>
         <pathelement path='${java.class.path}'/>
         <pathelement path='${classes_dir}'/>
       </classpath>
    </antlr>
    -->
  </target>

  <target name='compile' depends='parser'>

    <mkdir dir='${classes_dir}'/>

    <javac srcdir='${src_dir}' destdir='${classes_dir}'
           source='1.4' debug='on' excludes='${java15_src}/**/*.java'>
      <src path='${src_dir}'/>
      <src path='${gen_dir}'/>
      <classpath>
        <pathelement location='${antlr_jar}'/>
        <pathelement location='${staxapi_jar}'/>
        <pathelement path='${classes_dir}'/>
        <pathelement path='${java.class.path}'/>
      </classpath>
    </javac>

    <unjar src='${java15_jar}' dest='${classes_dir}'/>

  </target>

  <target name='test'>
    <ant dir='${tests_dir}' target='all' inheritAll='false' />
  </target>

  <target name="javadocs" depends='compile'>
    <mkdir dir='${javadocbuild_dir}' />
    <javadoc packagenames='*'
             destdir='${javadocbuild_dir}'
             windowtitle='JAM Documentation'
             source='1.4'
             stylesheetfile='${site_dir}/stylesheet.css'>
      <fileset dir='${src_dir}' includes='**/jam/**/*.java' excludes='**/internal/**/*.java' />
      <link href='http://e-docs.bea.com/wls/docs81/javadocs/' />
      <link href='http://java.sun.com/j2se/1.4.2/docs/api/' />
      <link href='http://java.sun.com/j2ee/1.4/docs/api/' />
      <link href='http://xml.apache.org/xerces-j/apiDocs/' />
      <classpath>
        <pathelement location='${classes_dir}' />
      </classpath>
    </javadoc>
  </target>
  
  <target name='jars' depends='all'>
    <copy  todir='${classes_dir}' ><fileset dir='license'/></copy>
    <jar jarfile='${jam_jar}'    basedir='${classes_dir}'/>
    <jar jarfile='${javadoc_zip}' basedir='${javadocbuild_dir}'/>
    <jar jarfile='${jamsrc_zip}' basedir='.' 
         excludes='${build_dir}/**,src/**,test/**'/>
    <jar jarfile='${jamsrc_zip}' basedir='${src_dir}' update='true'/>
  </target>

  <target name='website' depends='all,javadocs,jars'>
    <mkdir dir='${sitebuild_dir}' />
    <copy  todir='${sitebuild_dir}' >
      <fileset dir='${site_dir}'/>
    </copy>
<!--
    <copy todir='${sitebuild_dir}' flatten='true'>
      <fileset dir='.'  includes='${jam_jar},${javadoc_zip},${jamsrc_zip}'/>
    </copy>
-->
  </target>


  <!-- recompiles java15_jar.  THIS ONLY WILL RUN WITH JDK1.5!! -->
  <target name='java15jar' depends='clean,all'>
    <mkdir dir='${java15_builddir}'/>
    <javac srcdir='${src_dir}' destdir='${java15_builddir}' sourcepath='${src_dir}'
           source='1.5' target='1.5' debug='on' includes='${java15_src}/**/*.java'>
      <classpath>
        <pathelement path='${classes_dir}'/>
        <pathelement path='${java.class.path}'/>
      </classpath>
    </javac>
    <jar jarfile='${java15_jar}' basedir='${java15_builddir}' update='false'/>
  </target>


  <target name='repackage' depends='clean,repackage_check,repackage_do'/>

  <target name='repackage_check' unless='newpackage'>
    <echo message='Please specify -Dnewpackage=[destination package]'/>
    <echo message='on the ant command line.'/>
  </target>


  <target name='repackage_do' if='newpackage'>
    <echo message='Building repackaged JAM under ${newpackage}...'/>
    <echo message=''/>

    <property name='repackage_spec' 
              value='org.apache.xmlbeans.impl.jam:${newpackage}'/>
    <property name='repackaged_src' value='${build_dir}/repackaged_src'/>

    <mkdir dir='${repackaged_src}'/>
    <mkdir dir='${classes_dir}'/>

    <javac srcdir='${src_dir}' destdir='${classes_dir}' 
           includes='**/tools/*.java'/>

    <java classname='org.apache.xmlbeans.impl.jam.tools.Repackage' 
                    fork='true' failonerror='true'>
       <classpath>
         <pathelement location='${build_dir}/classes'/>
       </classpath>
       <arg line='-repackage ${repackage_spec} -f src -t ${repackaged_src}'/>
<!--       <arg line='-repackage ${repackage_spec} -f test -t ${repackaged_src}'/>-->
    </java>

    <delete dir='${classes_dir}'/> <!-- don't need repackager any more -->

    <ant dir='.' target='website' inheritAll='false' >
      <property name='src_dir' value='${repackaged_src}'/>
    </ant>
  </target>
  
  

</project>
