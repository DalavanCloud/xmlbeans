<!-- NOTE: if you get errors about not being able to load the junit
     task, try copying ../external/lib/junit.jar into your ant/lib
     directory.  This seems to be an ant or JDK 1.5 bug, not sure which.

     ALSO: If you are building under JDK1.5, you now MUST build under
     1.5 beta49 or later.  This is becuase in b49 Sun renamed some classes
     and methods in the doclet API.
-->


<project name='jam.tests' basedir='.' default='clean_all_test'>

<!-- Build file to build and run JAM tests -->

  <property name='src-jamtest' value='.' />
  <property name='jamroot' value='../' />

  <property name='jam_build_dir' value='${jamroot}/../build/jam'/> <!--FIXME-->

  <property name='test_build_dir'   value='${jam_build_dir}/test'/> <!--FIXME-->
  <property name='tests_build_dir'  value='${test_build_dir}/tests'/>
  <property name='cases_build_dir'  value='${test_build_dir}/cases'/>
  <property name='extjar_build_dir' value='${test_build_dir}/extjar'/>
  <property name='extjar_jar'       value='${test_build_dir}/extjar.jar'/>

  <property name='junit_jar' value='${jamroot}/external/lib/junit.jar' />
  <property name='jsr173api_jar' value='../../build/lib/jsr173_api.jar'/>
  <property name='jsr173ri_jar' value='../../build/lib/jsr173_ri.jar'/>
  <property name='tidy_jar' value='../external/lib/tidy.jar'/>
  <property name='tools_jar' value=' e:/java/jdk150/jre/../lib/tools.jar'/>

  <property name='cases_src_dir'     value='cases/src'/>
  <property name='cases_src_150_dir' value='cases/src_150'/>
  <property name='tests_src_dir'     value='tests/src'/>
  <property name='tests_src_150_dir' value='tests/src_150'/>
  <property name='extjar_src_dir'    value='cases/external_jar_case/src'/>



  <path id='classpath' >

    <pathelement path='${tools_jar}' />

 <!-- use build/classes instead of xbean.jar for develpment convenience -->
    <pathelement path='${jam_build_dir}/classes' />
    <pathelement path='${cases_build_dir}' />

    <pathelement location='${tests_build_dir}' />
    <pathelement location='${junit_jar}'/>
    <pathelement path='${java.class.path}' />

    <pathelement location='${tidy_jar}' />
    <pathelement location='${jsr173api_jar}' />
    <pathelement location='${jsr173ri_jar}' />

  </path>


  <property name='classpath-value' refid='classpath'/>

  <target name='clean_all_test' depends='clean,all,test'/>

  <target name='clean' >
    <delete dir='${test_build_dir}'/>
  </target>

  <target name='all' depends='compile,test' />


  <target name='compile' depends='compile14, do15compile.check, compile15, build_external_jar'/>

  <target name='compile14'>
    <mkdir dir='${cases_build_dir}'/>
    <javac srcdir='${cases_src_dir}' destdir='${cases_build_dir}'
           source='1.4' target='1.4'
           debug='on'   classpathref='classpath'/>
    <mkdir dir='${tests_build_dir}'/>
    <javac srcdir='${tests_src_dir}' destdir='${tests_build_dir}'
           source='1.4' target='1.4'
           debug='on'   classpathref='classpath'/>
  </target>

  <target name='compile15' if='do15compile'>
    <mkdir dir='${cases_build_dir}'/>
    <javac srcdir='${cases_src_150_dir}' destdir='${cases_build_dir}'
           source='1.4' target='1.4'
           debug='on'   classpathref='classpath'/>
    <mkdir dir='${tests_build_dir}'/>
    <javac srcdir='${tests_src_150_dir}' destdir='${tests_build_dir}'
           source='1.4' target='1.4'
           debug='on'   classpathref='classpath'/>
  </target>

  <target name='build_external_jar'>
    <mkdir dir='${extjar_build_dir}'/>
    <javac srcdir='${extjar_src_dir}' destdir='${extjar_build_dir}'
           debug='on' classpathref='classpath'/>
    <jar jarfile='${extjar_jar}'      basedir='${extjar_build_dir}'/>
  </target>


<!--
skipping this target for now, just checked in the generated code 
for now because JDK versioning problems when running in ant
-->
  <target name='annogen'>

    <taskdef name='annogen'
             classname='org.apache.xmlbeans.impl.jam.annogen.tools.AnnogenTask'
             classpathref='classpath'/>

    <annogen outputdir='${test_build_dir}' srcdir='dummyclasses'
             includes='org/apache/xmlbeans/test/jam/dummyclasses/jsr175/RFEAnnotation.java'
             classpathref='classpath'
             pre15CompatibilityMode='true'/>

  </target>




  <target name="test" depends='do15compile.check'>


    <!-- make sure you copy junit.jar into ANT_HOME/lib -->
    <taskdef name="junit"
             classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"
             classpathref='classpath'/>

    <property name='sources_test' value='org.apache.xmlbeans.test.jam.SourcesJamTest'/>
    <property name='reflect_test' value='org.apache.xmlbeans.test.jam.ReflectJamTest'/>
    <condition property='sources_test' value='${sources_test}_150'>
     <isset property='do15compile'/>
    </condition>
    <condition property='reflect_test' value='${reflect_test}_150'>
     <isset property='do15compile'/>
    </condition>


<!-- why do these have to be separate?  something gets
     very confused if they're not
 -->

    <echo message=''/>
    <echo message=''/>
    <echo message='================= beginning javadoc tests ======== '/>

    <junit maxmemory="256m"     fork='true'
           dir='.'
           haltonerror='yes'
           haltonfailure='yes'
           showoutput='yes'
           printsummary='yes'>
      <classpath>
        <pathelement path='${classpath-value}'/> <!--ref no workie-->
      </classpath>
      <formatter type='plain' usefile='false'/>
      <test name='${sources_test}'/>
      <!-- <test name='org.apache.xmlbeans.test.jam.ReflectJamTest'/>-->
      <!--parser work is on hold for the moment-->
      <!--<test name='org.apache.xmlbeans.test.jam.ParserJamTest'/>-->
    </junit>

    <echo message=''/>
    <echo message=''/>
    <echo message='================= beginning reflection tests ======== '/>


    <junit maxmemory="256m"     fork='true'
           dir='.'
           haltonerror='yes'
           haltonfailure='yes'
           showoutput='yes'
           printsummary='yes'>
      <classpath>
        <pathelement path='${classpath-value}'/> <!--ref no workie-->
      </classpath>
      <formatter type='plain' usefile='false'/>
      <test name='${reflect_test}'/>
      <!--parser work is on hold for the moment-->
      <!--<test name='org.apache.xmlbeans.test.jam.ParserJamTest'/>-->
    </junit>

  </target>



  <!-- JDK150 checking -->

  <target name='do15compile.check'
    depends='do15compile.look,no15.warn'/>

  <target name='do15compile.look'>
    <condition property='do15compile'>
      <contains string='${java.version}' substring='1.5'/>
    </condition>
  </target>

  <target name='no15.warn' unless='do15compile'>
    <echo message='======================================================'/>
    <echo message='W A R N I N G:  You are testing JAM without JDK 1.5.'/>
    <echo message='This will not test all of JAMs functionality.'/>
    <echo message='However, running these tests under 1.4 in addition'/>
    <echo message='to 1.5 is a good idea.'/>
    <echo message='======================================================'/>

  </target>


</project>